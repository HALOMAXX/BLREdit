<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:BLREdit">

    <local:BLREditSettings x:Key="Settings"/>

    <Style TargetType="ListView">
        <Setter Property="Background" Value="#4C000000"/>
        <Setter Property="BorderBrush" Value="#0C9E9E9E"/>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Background" Value="#80000000"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="#0C9E9E9E"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
    </Style>

    <!--<DataTemplate DataType="{x:Type system:String}">
        <TextBlock Text="{Binding}">
            <TextBlock.Resources>
                <Style TargetType="{x:Type TextBlock}"/>
            </TextBlock.Resources>
        </TextBlock>
    </DataTemplate>-->

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlock">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    
    <ControlTemplate x:Key="ComboBoxToggleButton"  TargetType="{x:Type ToggleButton}">
        <Grid Background="Transparent">
            <Image Name="Normal" Visibility="Hidden" Source="Resources/CleanedButton.png" Stretch="Fill" Width="{Binding (ComboBox.Width), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" Height="{Binding (ComboBox.Height), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"/>
            <Image Name="Hover" Source="Resources/CleanedButtonHover.png" Stretch="Fill" Width="{Binding (ComboBox.Width), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" Height="{Binding (ComboBox.Height), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"/>
        </Grid>
    </ControlTemplate>

    <Style TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Margin" Value="20,0,0,0"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="20,0,0,0"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            HorizontalOffset="18"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"
                                BorderThickness="0"
                                BorderBrush="#888888"/>
                                <ScrollViewer Margin="20,0,0,0" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="Background" Value="Transparent"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid Margin="1,1,1,1" Background="Transparent">
                        <Image Name="Normal" Source="Resources/CleanedButton.png" Stretch="Fill" Width="{Binding (ComboBox.Width), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" Height="{Binding (ComboBox.Height), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"/>
                        <Image Name="Hover" Visibility="Hidden" Source="Resources/CleanedButtonHover.png" Stretch="Fill" Width="{Binding (ComboBox.Width), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" Height="{Binding (ComboBox.Height), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"/>
                        <ContentPresenter>
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="#FF7494A0"/>
                                    <Setter Property="Margin" Value="20,0,0,0"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image Name="Normal" Source="Resources/CleanedButton.png" Stretch="Fill" Width="{Binding (Button.Width), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Height="{Binding (Button.ActualHeight), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                        <Image Name="Hover" Visibility="Hidden" Source="Resources/CleanedButtonHover.png" Stretch="Fill" Width="{Binding (Button.Width), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Height="{Binding (Button.ActualHeight), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="10*"/>
                            </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" Name="ButtonContent"  Foreground="#FF78AEBC" VerticalAlignment="Center" Text="{Binding (Button.Content), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ButtonContent" Property="Foreground" Value="#FFFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ButtonContent" Property="Foreground" Value="#FFFFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Label" x:Key="DescriptorLabel">
        <Setter Property="TextBlock.Foreground" Value="#FFD2D2D2"/>
    </Style>

    <Style TargetType="Label" x:Key="DisplayLabel">
        <Setter Property="TextBlock.Foreground" Value="#FF7494A0"/>
    </Style>

    <Style TargetType="Border">
        <Setter Property="Background" Value="#20000000"/>
        <Setter Property="BorderBrush" Value="#0C9E9E9E"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
    </Style>


    <Style x:Key="DebugElement" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Visibility" Value="{Binding Source={StaticResource Settings}, Path=Settings.DebugVisibility}"/>
    </Style>

    <Style x:Key="DebugBorder" BasedOn="{StaticResource DebugElement}" TargetType="Border">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#0C9E9E9E"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
    </Style>
</ResourceDictionary>